#include <Eigen/Dense>
#include <iostream>
#include <cmath>
#include <numbers>
#include <vector>
#include <array>
#include <cassert>
#include <iomanip>

double deg_to_rad(double degrees)
{
    return degrees * 0.0174532925;
}

double rad_to_deg(double radians)
{
    return radians * 57.2957795;
}

// change master

//T.1 a) Create a function that converts between vector types.
//MADE BY ME <3 used chat to describe datatypes. Watched youtube vidoes on for loops.
Eigen::VectorXd std_vector_to_eigen(const std::vector<double> &v) {
    Eigen::VectorXd eigen(v.size());
    for (int i = 0; i < v.size(); i++) {
        eigen(i) = v[i];
    }
    return eigen;
}

//T.1 b) Compare a number to the average value of the last items in a collection.
//Generated by Chat GPT 5.0
//Equation found in page x, MR pre-print 2019
/*bool is_average_below_eps(const std::vector<double> &values, double eps = 10e-7, uint8_t n_values = 5u) {
    if (values.size() < n) {
        return false;
    }
    double sum = 0.0;
    for (int i = values.size() - n; i < values.size(); ++i) {
        sum += values[i];
    }
    double average = sum / n;
    return value <= average;
}*/




int main()
{
    //T.1 a) TEST CODE
    std::vector<double> v = {1.0, 2.0, 3.0, 4.0};
    Eigen::VectorXd eigen = std_vector_to_eigen(v);
    std::cout << "Test 1.a:" << eigen.transpose() << std::endl;
    //T.1b) TEST CODE
    //std::vector<double> values = {1.0, 2.0, 3.0, 4.0, 5.0};



    std::cout << "Hello, World!" << std::endl;
    return 0;
}
